{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arthur/Desktop/wdg/wdg-automation/src/components/login/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Card, Input, Button } from \"react-materialize\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { loginAction } from \"../../actions\";\nimport { login } from \"../../api\";\nimport FlashMessage from \"react-flash-message\";\n\nconst Login = props => {\n  _s();\n\n  const history = useHistory(),\n        {\n    updateHeader,\n    loginAction\n  } = props,\n        [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const submitLogin = async () => {\n    const response = await login(loginData);\n\n    if (response.status === 200) {\n      loginAction(response.data.token);\n      history.push(\"/users\");\n      updateHeader();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(FlashMessage, {\n      duration: 4000,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-component\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"notification-container--top-right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"notification\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"animated fadeIn notification__item notification__item--default\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"notification__content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"notification__message\",\n                  children: \"All your messages have been logged\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      m: 12,\n      s: 12,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"endere\\xE7o@email.com\",\n            type: \"email\",\n            label: \"Email\",\n            s: 12,\n            onChange: e => setLoginData({ ...loginData,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Senha\",\n            label: \"Senha\",\n            type: \"password\",\n            s: 12,\n            onChange: e => setLoginData({ ...loginData,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            s: 12,\n            m: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              waves: \"light\",\n              className: \"blue darken-2\",\n              onClick: submitLogin,\n              children: \"ENTRAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Fw+EmlmMFHbg0FYkZZXuyEFxNA4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nconst mapStateToProps = store => ({\n  token: store.clickState.token\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  loginAction\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/arthur/Desktop/wdg/wdg-automation/src/components/login/login.js"],"names":["React","useState","Row","Col","Card","Input","Button","useHistory","connect","bindActionCreators","loginAction","login","FlashMessage","Login","props","history","updateHeader","loginData","setLoginData","email","password","submitLogin","response","status","data","token","push","e","target","value","mapStateToProps","store","clickState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Card, Input, Button } from \"react-materialize\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { loginAction } from \"../../actions\";\nimport { login } from \"../../api\";\nimport FlashMessage from \"react-flash-message\";\n\nconst Login = (props) => {\n  const history = useHistory(),\n    { updateHeader, loginAction } = props,\n    [loginData, setLoginData] = useState({ email: \"\", password: \"\" });\n\n  const submitLogin = async () => {\n    const response = await login(loginData);\n    if (response.status === 200) {\n      loginAction(response.data.token);\n      history.push(\"/users\");\n      updateHeader();\n    }\n  };\n\n  return (\n    <Row>\n      <FlashMessage duration={4000}>\n        <div className=\"notifications-component\">\n          <div class=\"notification-container--top-right\">\n            <div class=\"notification\">\n              <div class=\"animated fadeIn notification__item notification__item--default\">\n                <div class=\"notification__content\">\n                  <div class=\"notification__message\">\n                    All your messages have been logged\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </FlashMessage>\n      <Col m={12} s={12}>\n        <h5>Login</h5>\n        <Card>\n          <Row>\n            <Input\n              placeholder=\"endereço@email.com\"\n              type=\"email\"\n              label=\"Email\"\n              s={12}\n              onChange={(e) =>\n                setLoginData({ ...loginData, email: e.target.value })\n              }\n            />\n            <Input\n              placeholder=\"Senha\"\n              label=\"Senha\"\n              type=\"password\"\n              s={12}\n              onChange={(e) =>\n                setLoginData({ ...loginData, password: e.target.value })\n              }\n            />\n            <Col s={12} m={12}>\n              <Button\n                waves=\"light\"\n                className=\"blue darken-2\"\n                onClick={submitLogin}\n              >\n                ENTRAR\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nconst mapStateToProps = (store) => ({\n  token: store.clickState.token,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ loginAction }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}
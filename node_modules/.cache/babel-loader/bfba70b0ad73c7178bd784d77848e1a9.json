{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arthur/Desktop/wdg/wdg-automation/src/components/login/login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Row, Col, Card, Input, Button } from \"react-materialize\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { loginAction } from \"../../actions\";\nimport { getUserById } from \"../../api\";\n\nconst Login = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    loginAction\n  } = props;\n\n  const submitLogin = async () => {\n    const response = await getUserById(\"test\");\n\n    if (response.status === 200) {\n      loginAction(response.data.token);\n      history.push(\"/users\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      m: 12,\n      s: 12,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"endere\\xE7o@email.com\",\n            type: \"email\",\n            label: \"Email\",\n            s: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Senha\",\n            label: \"Senha\",\n            type: \"password\",\n            s: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            s: 12,\n            m: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              waves: \"light\",\n              className: \"blue darken-2\",\n              onClick: submitLogin,\n              children: \"ENTRAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nconst mapStateToProps = store => ({\n  token: store.clickState.token\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  loginAction\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/arthur/Desktop/wdg/wdg-automation/src/components/login/login.js"],"names":["React","Row","Col","Card","Input","Button","useHistory","connect","bindActionCreators","loginAction","getUserById","Login","props","history","submitLogin","response","status","data","token","push","mapStateToProps","store","clickState","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAkBG,KAAxB;;AAEA,QAAME,WAAW,GAAG,YAAY;AAC9B,UAAMC,QAAQ,GAAG,MAAML,WAAW,CAAC,MAAD,CAAlC;;AACA,QAAIK,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BP,MAAAA,WAAW,CAACM,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAX;AACAL,MAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACD;AACF,GAND;;AAQA,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,CAAC,EAAE,EAAR;AAAY,MAAA,CAAC,EAAE,EAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA,+BACE,QAAC,GAAD;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,WAAW,EAAC,uBADd;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAC,OAHR;AAIE,YAAA,CAAC,EAAE;AAJL;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,KAAD;AAAO,YAAA,WAAW,EAAC,OAAnB;AAA2B,YAAA,KAAK,EAAC,OAAjC;AAAyC,YAAA,IAAI,EAAC,UAA9C;AAAyD,YAAA,CAAC,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE,QAAC,GAAD;AAAK,YAAA,CAAC,EAAE,EAAR;AAAY,YAAA,CAAC,EAAE,EAAf;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,KAAK,EAAC,OADR;AAEE,cAAA,SAAS,EAAC,eAFZ;AAGE,cAAA,OAAO,EAAEL,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAvCD;;GAAMH,K;UACYL,U;;;KADZK,K;;AAyCN,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,KAAK,EAAEG,KAAK,CAACC,UAAN,CAAiBJ;AADU,CAAZ,CAAxB;;AAIA,MAAMK,kBAAkB,GAAIC,QAAD,IACzBhB,kBAAkB,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAkBe,QAAlB,CADpB;;AAGA,eAAejB,OAAO,CAACa,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,KAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { Row, Col, Card, Input, Button } from \"react-materialize\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { loginAction } from \"../../actions\";\nimport { getUserById } from \"../../api\";\n\nconst Login = (props) => {\n  const history = useHistory();\n  const { loginAction } = props;\n\n  const submitLogin = async () => {\n    const response = await getUserById(\"test\");\n    if (response.status === 200) {\n      loginAction(response.data.token);\n      history.push(\"/users\");\n    }\n  };\n\n  return (\n    <Row>\n      <Col m={12} s={12}>\n        <h5>Login</h5>\n        <Card>\n          <Row>\n            <Input\n              placeholder=\"endereÃ§o@email.com\"\n              type=\"email\"\n              label=\"Email\"\n              s={12}\n            />\n            <Input placeholder=\"Senha\" label=\"Senha\" type=\"password\" s={12} />\n            <Col s={12} m={12}>\n              <Button\n                waves=\"light\"\n                className=\"blue darken-2\"\n                onClick={submitLogin}\n              >\n                ENTRAR\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nconst mapStateToProps = (store) => ({\n  token: store.clickState.token,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ loginAction }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}